name: CI with UV

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  pull-requests: write
  checks: write

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"
  # Enable UV system Python for better compatibility
  UV_SYSTEM_PYTHON: "1"

jobs:
  test-uv:
    name: Test with UV (${{ matrix.os }}, ${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        exclude:
          # Reduce matrix for faster CI
          - os: windows-latest
            python-version: "3.13"
          - os: macos-latest
            python-version: "3.10"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install UV
        uses: astral-sh/setup-uv@v5
        with:
          # Pin to latest stable version for reproducibility
          version: "latest"
          # Enable caching for faster builds
          enable-cache: true
          # Cache based on lockfile changes
          cache-dependency-glob: "uv.lock"
          # Set Python version for the matrix
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --frozen --all-extras

      - name: Create output directory
        run: python -c "import os; os.makedirs('output', exist_ok=True)"

      - name: Run tests with UV
        run: uv run pytest tests/ -v --tb=short --cov=. --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint-uv:
    name: Lint with UV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install UV
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync --frozen --all-extras

      - name: Run Ruff linting
        run: uv run ruff check . --output-format=github

      - name: Run Ruff formatting check
        run: uv run ruff format --check .

      - name: Run mypy type checking
        run: uv run mypy china_data_processor.py china_data_downloader.py || true

  security-uv:
    name: Security Scan with UV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install UV
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync --frozen --all-extras

      - name: Run security checks
        run: |
          uv run ruff check . --select=S --output-format=github
          uv run bandit -r . -f json -o bandit-report.json --exclude "./venv/*,./tests/*" || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports-uv-${{ github.run_id }}
          path: bandit-report.json
          retention-days: 30

  build-test:
    name: Build Test with UV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install UV
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync --frozen --all-extras

      - name: Build package
        run: uv build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.run_id }}
          path: dist/
          retention-days: 7
