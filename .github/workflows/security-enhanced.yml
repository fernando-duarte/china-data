name: Enhanced Security Scan
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  security-scan:
    name: Advanced Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Setup Python with UV
        run: uv python install 3.12

      - name: Install dependencies
        run: uv sync --dev

      - name: SAST scanning with Semgrep
        run: |
          uv run semgrep --config=auto . --json --output=semgrep-report.json || true
          uv run semgrep --config=auto . --sarif --output=semgrep-report.sarif || true

      - name: Dependency scanning with pip-audit
        run: |
          uv run pip-audit --format=json --output=pip-audit-report.json || true
          uv run pip-audit --format=sarif --output=pip-audit-report.sarif || true

      - name: Secret scanning with detect-secrets
        run: |
          uv run detect-secrets scan --all-files --baseline .secrets.baseline --force-use-all-plugins || true

      - name: License compliance check
        run: |
          uv run pip-licenses --format=json --output-file=licenses.json || true

      - name: Bandit security linting
        run: |
          uv run bandit -r . -f json -o bandit-report.json --exclude "./venv/*,./tests/*" || true
          uv run bandit -r . -f sarif -o bandit-report.sarif --exclude "./venv/*,./tests/*" || true

      - name: Ruff security checks
        run: |
          uv run ruff check . --select=S --output-format=json > ruff-security-report.json || true
          uv run ruff check . --select=S --output-format=sarif > ruff-security-report.sarif || true

      - name: Upload SARIF results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: |
            semgrep-report.sarif
            pip-audit-report.sarif
            bandit-report.sarif
            ruff-security-report.sarif

      - name: Upload security reports as artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            semgrep-report.json
            pip-audit-report.json
            bandit-report.json
            ruff-security-report.json
            licenses.json

      - name: Comment on PR with security summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## ðŸ”’ Security Scan Results\n\n';

            // Check if security reports exist and add summary
            try {
              if (fs.existsSync('semgrep-report.json')) {
                const semgrep = JSON.parse(fs.readFileSync('semgrep-report.json', 'utf8'));
                comment += `- **Semgrep**: ${semgrep.results?.length || 0} findings\n`;
              }

              if (fs.existsSync('bandit-report.json')) {
                const bandit = JSON.parse(fs.readFileSync('bandit-report.json', 'utf8'));
                comment += `- **Bandit**: ${bandit.results?.length || 0} findings\n`;
              }

              comment += '\nðŸ“Š Detailed reports are available in the workflow artifacts.';

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Error reading security reports:', error);
            }
