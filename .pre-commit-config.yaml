default_language_version:
  python: python3.13

fail_fast: false

# Simplified global exclude with cache directories
exclude: |
  (?x)^(
    \.venv/|
    venv/|
    .*\.egg-info/|
    \.(git|mypy_cache|pytest_cache|ruff_cache|hypothesis)/|
    (build|dist|htmlcov|site|node_modules|workflow_outputs)/|
    \.(vscode|idea)/|
    .*cache/|
    security-results/
  )

repos:
  # Standard hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-ast
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: requirements-txt-fixer

  # Code formatting and linting (with caching)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.11.11
    hooks:
      - id: ruff
        args: [--fix, --cache-dir=.ruff_cache]
        files: ^(china_data_processor\.py|china_data_downloader\.py|config\.py|config_schema\.py|utils/.*\.py|model/.*\.py)$
      - id: ruff-format
        files: ^(china_data_processor\.py|china_data_downloader\.py|config\.py|config_schema\.py|utils/.*\.py|model/.*\.py)$

  # Security scanning (consolidated)
  - repo: https://github.com/semgrep/semgrep
    rev: v1.99.0
    hooks:
      - id: semgrep
        name: semgrep-security-scan
        args:
          - --config=p/security-audit
          - --config=p/secrets
          - --timeout=10
          - --max-target-bytes=1000000
          - --skip-unknown-extensions
          - --json
          - --output=security-results/semgrep-report.json
        files: ^(china_data_processor\.py|china_data_downloader\.py|config\.py|config_schema\.py|utils/.*\.py|model/.*\.py)$
        exclude: ^tests/
        require_serial: false

  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.3
    hooks:
      - id: bandit
        name: bandit-security-scan
        args:
          - -ll # Only high severity
          - -f
          - json
          - -o
          - security-results/bandit-report.json
        files: ^(china_data_processor\.py|china_data_downloader\.py|config\.py|config_schema\.py|utils/.*\.py|model/.*\.py)$
        exclude: ^tests/
        pass_filenames: true

  # Additional quality checks with caching
  - repo: https://github.com/pylint-dev/pylint
    rev: v3.3.1
    hooks:
      - id: pylint
        files: ^(china_data_processor\.py|china_data_downloader\.py|config\.py|config_schema\.py|utils/.*\.py|model/.*\.py)$
        exclude: ^tests/
        args: [--jobs=0]
        additional_dependencies:
          - pandas
          - numpy
          - requests
          - structlog
          - python-dotenv
          - pydantic
          - pandas-datareader
          - requests-cache
          - statsmodels
          - scikit-learn
          - opentelemetry-api
          - opentelemetry-sdk
          - opentelemetry-exporter-otlp
          - jinja2

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        files: ^(china_data_processor\.py|china_data_downloader\.py|config\.py|config_schema\.py|utils/.*\.py|model/.*\.py)$
        exclude: ^tests/
        args:
          - --strict
          - --python-version=3.13
          - --cache-dir=.mypy_cache
          - --incremental
          - --ignore-missing-imports
        additional_dependencies:
          - types-requests
          - pandas-stubs
          - types-pytz
          - pydantic

  # Package vulnerability scanning
  - repo: https://github.com/pypa/pip-audit
    rev: v2.7.3
    hooks:
      - id: pip-audit
        args:
          - --desc
          - --fix

  # Local hooks for additional tools
  - repo: local
    hooks:
      - id: safety-check
        name: safety vulnerability scan
        entry: safety
        language: system
        args:
          - scan
          - --output
          - screen
        files: ^(requirements.*\.txt|pyproject\.toml|uv\.lock)$
        pass_filenames: false
        require_serial: true

      - id: radon-complexity
        name: radon complexity check
        entry: radon
        language: system
        args: [cc, --min, B, --show-complexity]
        files: ^(china_data_processor\.py|china_data_downloader\.py|config\.py|config_schema\.py|utils/.*\.py|model/.*\.py)$
        pass_filenames: true
        require_serial: false

      - id: interrogate
        name: interrogate docstring coverage
        entry: interrogate
        language: system
        args: [--verbose, --fail-under=80]
        files: ^(china_data_processor\.py|china_data_downloader\.py|config\.py|config_schema\.py|utils/.*\.py|model/.*\.py)$
        pass_filenames: true
        require_serial: false

      - id: check-tool-versions
        name: check tool version alignment
        entry: python3
        language: system
        args:
          - scripts/sync_tool_versions.py
          - --check-only
        files: ^(\.pre-commit-config\.yaml|\.github/workflows/.*\.yml|pyproject\.toml)$
        pass_filenames: false
        require_serial: true

  # Secret detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]

  # Python upgrades
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.19.0
    hooks:
      - id: pyupgrade
        args: [--py313-plus]

  # Markdown/YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or:
          - yaml
          - markdown
        exclude: ^\.github/

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.43.0
    hooks:
      - id: markdownlint
        args: [--fix]
        exclude: ^\.github/

ci:
  autofix_commit_msg: "[pre-commit.ci] auto fixes from pre-commit hooks"
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip:
    - pip-audit
    - pylint
    - mypy
    - radon-complexity
    - interrogate
    - bandit-security-scan
    - semgrep-security-scan
    - safety-check
  submodules: false
