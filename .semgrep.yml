# Semgrep Configuration for China Data Project
# Enhanced security scanning with performance optimizations

# This file configures which rulesets to use and performance settings
# The actual rules are pulled from Semgrep's registry

# Include official Semgrep rulesets for comprehensive security coverage
extends:
  - p/security-audit # Security vulnerabilities and anti-patterns
  - p/secrets # Secret detection (API keys, tokens, etc.)
  - p/python # Python-specific security issues
  - p/owasp-top-ten # OWASP Top 10 security vulnerabilities
  - p/bandit # Bandit-equivalent rules for Python security

# Performance optimizations
options:
  # Enable caching for faster subsequent runs
  cache: true

  # Set timeout to prevent hanging (30 seconds max as per checklist)
  timeout: 30

  # Skip unknown file extensions to improve performance
  skip_unknown_extensions: true

  # Enable incremental scanning for better performance
  incremental: true

  # Use multiple cores for parallel processing
  jobs: auto

# File targeting - focus on Python files only for performance
include:
  - "*.py"
  - "**/*.py"

# Exclude patterns for directories that don't need scanning
exclude:
  - ".venv/"
  - "venv/"
  - "__pycache__/"
  - ".git/"
  - ".mypy_cache/"
  - ".pytest_cache/"
  - ".ruff_cache/"
  - ".hypothesis/"
  - "node_modules/"
  - "htmlcov/"
  - "workflow_outputs/"
  - "*.egg-info/"
  - ".benchmarks/"
  - "docs/"
  - "examples/"
  - "tests/data_integrity/" # Exclude test data files
  - "*.log"
  - "*.json"
  - "*.xml"
  - "*.lock"

# Custom severity levels for better prioritization
severity:
  # Treat secrets as critical
  secrets: ERROR
  # Security issues as high priority
  security: WARNING
  # Other issues as info
  default: INFO

# Output configuration
output:
  # Generate SARIF for IDE integration
  sarif: true
  # Include metrics for performance monitoring
  metrics: true
  # Verbose output for debugging when needed
  verbose: false
