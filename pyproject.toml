[build-system]
requires = ["setuptools>=67.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "china-data"
requires-python = ">=3.9"
description = "China Economic Data Analysis Pipeline"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Fernando Duarte", email = "fernando_duarte@brown.edu"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dynamic = ["version"]

[tool.black]
line-length = 120
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = ["venv", ".venv", "__pycache__", ".git", ".mypy_cache", ".pytest_cache"]

[tool.pylint.main]
py-version = "3.9"
ignore = ["venv", ".venv", "__pycache__", ".git", ".mypy_cache", ".pytest_cache"]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.design]
max-args = 10
max-locals = 30
max-returns = 12
max-branches = 25
max-statements = 90

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "too-few-public-methods",
    "unused-import",
    "unused-argument",
    "broad-exception-caught",
    "broad-exception-raised",
    "import-outside-toplevel",
    "logging-fstring-interpolation",
    "duplicate-code",
    "too-many-locals",
    "too-many-branches",
    "too-many-statements",
    "too-many-return-statements",
    "too-many-nested-blocks"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"

[tool.mypy]
python_version = "3.9"
# Strict mode settings
strict = true
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_generics = true
disallow_subclassing_any = true
check_untyped_defs = true
no_implicit_optional = true
strict_optional = true
strict_equality = true
# Additional strict checks
disallow_any_unimported = true
disallow_any_expr = false  # Too strict for practical use
disallow_any_decorated = true
disallow_any_explicit = false  # Allow explicit Any when needed
# Still ignore missing imports for external libraries
ignore_missing_imports = true
exclude = ["venv"]
# Show error codes for easier debugging
show_error_codes = true
# Show column numbers
show_column_numbers = true
# Show absolute paths
show_absolute_path = true
# Enable type checking for test files with relaxed rules
[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_any_generics = false
disable_error_code = ["misc", "var-annotated", "no-untyped-call", "arg-type", "operator", "unreachable"]

# Relax some checks for decorator modules
[[tool.mypy.overrides]]
module = "utils.error_handling.decorators"
disable_error_code = ["misc", "unreachable"]

# Relax checks for data source modules that use decorators
[[tool.mypy.overrides]]
module = "utils.data_sources.*"
disable_error_code = ["misc"]

# Relax unreachable code warnings for capital modules (false positives)
[[tool.mypy.overrides]]
module = "utils.capital.*"
disable_error_code = ["unreachable"]

# Relax unreachable code warnings for processor modules (false positives)
[[tool.mypy.overrides]]
module = "utils.processor_hc"
disable_error_code = ["unreachable"]

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = true
ignore-semiprivate = true
ignore-private = true
ignore-property-decorators = true
ignore-module = true
ignore-nested-functions = true
ignore-nested-classes = true
fail-under = 80
exclude = ["tests", "venv", ".venv", "build", "dist"]
verbose = 2
quiet = false
whitelist-regex = []
color = true
omit-covered-files = false
