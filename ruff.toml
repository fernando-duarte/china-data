# Ruff configuration for 2025 best practices
# See https://docs.astral.sh/ruff/configuration/

# Python version target
target-version = "py313"

# Same as Black
line-length = 120
indent-width = 4

# Exclude common directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[lint]
# Enable a comprehensive set of rules
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # Pyflakes
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "SIM",    # flake8-simplify
    "I",      # isort
    "N",      # pep8-naming
    "D",      # pydocstyle
    "C90",    # mccabe complexity
    "ANN",    # flake8-annotations
    "S",      # flake8-bandit (security)
    "BLE",    # flake8-blind-except
    "FBT",    # flake8-boolean-trap
    "A",      # flake8-builtins
    "COM",    # flake8-commas
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "EM",     # flake8-errmsg
    "EXE",    # flake8-executable
    "ISC",    # flake8-implicit-str-concat
    "ICN",    # flake8-import-conventions
    "G",      # flake8-logging-format
    "INP",    # flake8-no-pep420
    "PIE",    # flake8-pie
    "T20",    # flake8-print
    "PYI",    # flake8-pyi
    "PT",     # flake8-pytest-style
    "Q",      # flake8-quotes
    "RSE",    # flake8-raise
    "RET",    # flake8-return
    "SLF",    # flake8-self
    "SLOT",   # flake8-slots
    "TID",    # flake8-tidy-imports
    "TCH",    # flake8-type-checking
    "ARG",    # flake8-unused-arguments
    "PTH",    # flake8-use-pathlib
    "ERA",    # eradicate
    "PD",     # pandas-vet
    "PGH",    # pygrep-hooks
    "PL",     # Pylint
    "TRY",    # tryceratops
    "FLY",    # flynt
    "NPY",    # NumPy-specific rules
    "AIR",    # Airflow
    "PERF",   # Perflint
    "RUF",    # Ruff-specific rules
]

# Ignore specific rules
ignore = [
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D102",   # Missing docstring in public method
    "D103",   # Missing docstring in public function
    "D104",   # Missing docstring in public package
    "D105",   # Missing docstring in magic method
    "D106",   # Missing docstring in public nested class
    "D107",   # Missing docstring in __init__
    "ANN101", # Missing type annotation for self
    "ANN102", # Missing type annotation for cls
    "ANN401", # Dynamically typed expressions (Any)
    "S101",   # Use of assert detected
    "T201",   # Print found
    "T203",   # pprint found
    "FBT001", # Boolean positional arg in function definition
    "FBT002", # Boolean default value in function definition
    "COM812", # Missing trailing comma (conflicts with formatter)
    "ISC001", # Single line implicit string concatenation (conflicts with formatter)
]

# Allow autofix for all enabled rules
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.per-file-ignores]
# Ignore specific rules in test files
"tests/**/*.py" = [
    "S101",   # asserts are fine in tests
    "ARG",    # unused arguments are common in fixtures
    "FBT",    # boolean traps are common in tests
    "PLR2004", # Magic values are fine in tests
    "D",      # Don't require docstrings in tests
]

# Ignore import violations in __init__ files
"__init__.py" = ["F401", "F403"]

[lint.isort]
known-first-party = ["utils"]

[lint.mccabe]
max-complexity = 10

[lint.pydocstyle]
convention = "google"

[lint.pylint]
max-args = 10
max-branches = 25
max-returns = 12
max-statements = 90

[format]
# Like Black, use double quotes for strings
quote-style = "double"

# Like Black, indent with spaces
indent-style = "space"

# Like Black, respect magic trailing commas
skip-magic-trailing-comma = false

# Like Black, automatically detect line ending
line-ending = "auto"

# Enable formatting of code in docstrings
docstring-code-format = true

# Format code in docstrings with dynamic line length
docstring-code-line-length = "dynamic" 