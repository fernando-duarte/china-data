{"errors": [], "interfile_languages_used": [], "paths": {"scanned": ["test_semgrep_security.py"]}, "results": [{"check_id": "python.lang.security.audit.subprocess-shell-true.subprocess-shell-true", "end": {"col": 51, "line": 29, "offset": 968}, "extra": {"engine_kind": "OSS", "fingerprint": "76742f7306873d4a2737c1a21b4c844c3133e2b0d8f3ab493ca7d3c764cff6b4981d9314a29b9b61a48772180d18f2a7ec58582eb1fe7e2c866b795a1c4a0a28_0", "fix": "False", "is_ignored": false, "lines": "    subprocess.call(f\"ls {user_input}\", shell=True)", "message": "Found 'subprocess' function 'call' with 'shell=True'. This is dangerous because this call will spawn the command using a shell process. Doing so propagates current shell settings and variables, which makes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess", "https://docs.python.org/3/library/subprocess.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9646, "rule_id": "DbUpz2", "rv_id": 946382, "url": "https://semgrep.dev/playground/r/YDTvReW/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true", "version_id": "YDTvReW"}}, "shortlink": "https://sg.run/J92w", "source": "https://semgrep.dev/r/python.lang.security.audit.subprocess-shell-true.subprocess-shell-true", "source-rule-url": "https://bandit.readthedocs.io/en/latest/plugins/b602_subprocess_popen_with_shell_equals_true.html", "subcategory": ["secure default"], "technology": ["python"], "vulnerability_class": ["Command Injection"]}, "metavars": {"$FUNC": {"abstract_content": "call", "end": {"col": 20, "line": 29, "offset": 937}, "start": {"col": 16, "line": 29, "offset": 933}}, "$TRUE": {"abstract_content": "True", "end": {"col": 51, "line": 29, "offset": 968}, "start": {"col": 47, "line": 29, "offset": 964}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "test_semgrep_security.py", "start": {"col": 47, "line": 29, "offset": 964}}, {"check_id": "python.lang.security.deserialization.pickle.avoid-pickle", "end": {"col": 30, "line": 34, "offset": 1156}, "extra": {"engine_kind": "OSS", "fingerprint": "afa274ad8d19370b0d9fa8a6952c528573740d66fd853ed98e8b857b7e7dce8067aaab188844e4234af1ffefcca32abf0b981fd6c7c1da6424cffeee9b1eaefe_0", "is_ignored": false, "lines": "    return pickle.loads(data)", "message": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-502: Deserialization of Untrusted Data"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license", "likelihood": "LOW", "owasp": ["A08:2017 - Insecure Deserialization", "A08:2021 - Software and Data Integrity Failures"], "references": ["https://docs.python.org/3/library/pickle.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9675, "rule_id": "EwU2BJ", "rv_id": 946397, "url": "https://semgrep.dev/playground/r/w8TKJL9/python.lang.security.deserialization.pickle.avoid-pickle", "version_id": "w8TKJL9"}}, "shortlink": "https://sg.run/OPwB", "source": "https://semgrep.dev/r/python.lang.security.deserialization.pickle.avoid-pickle", "subcategory": ["audit"], "technology": ["python"], "vulnerability_class": ["Insecure Deserialization "]}, "metavars": {"$FUNC": {"abstract_content": "loads", "end": {"col": 24, "line": 34, "offset": 1150}, "start": {"col": 19, "line": 34, "offset": 1145}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "test_semgrep_security.py", "start": {"col": 12, "line": 34, "offset": 1138}}, {"check_id": "python.requests.security.disabled-cert-validation.disabled-cert-validation", "end": {"col": 73, "line": 67, "offset": 2301}, "extra": {"engine_kind": "OSS", "fingerprint": "bb89815901b9433409ab365e4119903c3b75bdcb103252b96c000bb1de7575d53957bbf29f65a4c32e3162d626e73e36c9c9886c98783253eb131dbd965c7fab_0", "fix": "requests.get(\"http://api.example.com/data\", verify=True)", "is_ignored": false, "lines": "    response = requests.get(\"http://api.example.com/data\", verify=False)", "message": "Certificate verification has been explicitly disabled. This permits insecure connections to insecure servers. Re-enable certification validation.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-295: Improper Certificate Validation"], "impact": "LOW", "license": "Semgrep Rules License v1.0. For more details, visit semgrep.dev/legal/rules-license", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure", "A07:2021 - Identification and Authentication Failures"], "references": ["https://stackoverflow.com/questions/41740361/is-it-safe-to-disable-ssl-certificate-verification-in-pythonss-requests-lib"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9694, "rule_id": "qNUoYR", "rv_id": 946444, "url": "https://semgrep.dev/playground/r/e1T98n8/python.requests.security.disabled-cert-validation.disabled-cert-validation", "version_id": "e1T98n8"}}, "shortlink": "https://sg.run/AlYp", "source": "https://semgrep.dev/r/python.requests.security.disabled-cert-validation.disabled-cert-validation", "subcategory": ["audit"], "technology": ["requests"], "vulnerability_class": ["Improper Authentication"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "test_semgrep_security.py", "start": {"col": 16, "line": 67, "offset": 2244}}], "skipped_rules": [], "version": "1.79.0"}
